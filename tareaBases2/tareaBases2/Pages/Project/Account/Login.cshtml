@page
@model tareaBases2.Pages.Project.Account.LoginModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <style>
        /* Estilos adicionales para centrar verticalmente */
        html, body {
            height: 100%;
        }

        body {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #timer {
            font-size: 16px;
            position: fixed;
            top: 10px;
            left: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 login-form-1">
                <h3 class="text-center">Inicia de sesión</h3>

                @if (@Model.bandera == false)
                {
                    <div class="alert alert-warning alert-dismissible fade show" role="alert">
                        <strong>@Model.message</strong>
                    </div>
                }
                <form id="loginForm" method="post">
                    <div class="form-group">
                        <input type="text" class="form-control" placeholder="Usuario" name="username" value="@Model.infoUsuario.Username" />
                    </div>

                    <div class="form-group">
                        <input type="password" class="form-control" placeholder="Contraseña" name="password" value="@Model.infoUsuario.Password" />
                    </div>

                    @if (@Model.bandera == true)
                    {
                        <div class="form-group text-center">
                            <script>
                                // Redirigir inmediatamente al cargar la página
                                window.location.href = "/Project/Employees/Index?idUser=@Model.id";
                                localStorage.setItem('tiempoRestante', 30 * 60);
                            </script>
                        </div>
                    }
                    <div class="row mb-3">
                        <div class="offset-sm-3 col-sm-3 d-grid">
                            <button type="submit" class="btn btn-primary">Iniciar sesión</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div id="timer" class="text-center">Tiempo restante: </div>

    <script>
        // Obtenemos los valores del tiempo e intentos del almacenamiento local al cargar la página
        var tiempoRestante = localStorage.getItem('tiempoRestante') || 30 * 60; // 30 minutos en segundos

        // Actualiza el reloj cada segundo
        var intervalo = setInterval(actualizarReloj, 1000);

        function actualizarReloj() {
            var timerElement = document.getElementById('timer');
            var minutos = Math.floor(tiempoRestante / 60);
            var segundos = tiempoRestante % 60;

            // Agrega un cero delante si el número es menor que 10
            minutos = minutos < 10 ? '0' + minutos : minutos;
            segundos = segundos < 10 ? '0' + segundos : segundos;

            timerElement.textContent = 'Tiempo restante: ' + minutos + ':' + segundos;

            if (tiempoRestante <= 0) {
                clearInterval(intervalo);
                localStorage.setItem('tiempoRestante', 30 * 60);
                window.close();
            } else {
                tiempoRestante--;
                localStorage.setItem('tiempoRestante', tiempoRestante);

            }
        }
    </script>
</body>
</html>

